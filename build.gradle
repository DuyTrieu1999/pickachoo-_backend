buildscript {
  repositories {
    mavenCentral()
    jcenter()
    maven { url "https://plugins.gradle.org/m2/" }
  }

  dependencies {
    classpath 'org.jetbrains.kotlin:kotlin-gradle-plugin:1.2.51'
    classpath 'com.github.jengelman.gradle.plugins:shadow:1.2.4'
    classpath "gradle.plugin.io.vertx:vertx-gradle-plugin:0.1.0"
  }
}

apply plugin: 'kotlin'
apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'application'
apply plugin: 'com.github.johnrengelman.shadow'
apply plugin: 'io.vertx.vertx-plugin'
apply plugin: 'kotlin-kapt'

repositories {
  mavenCentral()
}

version = '0.0.1-SNAPSHOT'
group = 'edu.cutie'
sourceCompatibility = '1.8'
mainClassName = 'io.vertx.core.Launcher'

dependencies {
  // TODO use compileOnly instead compile for codegen
  compile "io.vertx:vertx-core"
  compile "io.vertx:vertx-web"
  compile 'org.jetbrains.kotlin:kotlin-stdlib-jdk8:1.2.51'
  compile ("io.vertx:vertx-lang-kotlin") {
    exclude group: 'org.jetbrains.kotlin'
  }
  compile("io.vertx:vertx-lang-kotlin-coroutines") {
    exclude group: 'org.jetbrains.kotlin'
  }
  compile("io.vertx:vertx-jdbc-client")
  compile("io.vertx:vertx-auth-oauth2")
  compile('io.jsonwebtoken:jjwt:0.9.1')

  compile('joda-time:joda-time:2.10')

  compile('org.slf4j:slf4j-jdk14:1.7.21')

  compile('io.requery:requery:1.5.1')
  compile('io.requery:requery-kotlin:1.5.1')
  kapt 'io.requery:requery-processor:1.5.1'

  compile('com.zaxxer:HikariCP:3.1.0')
  compile 'org.hsqldb:hsqldb:2.4.1'

  compile "com.fasterxml.jackson.module:jackson-module-kotlin:2.9.+"

  compile 'com.google.flogger:flogger:0.2'
  compile 'com.cloudinary:cloudinary-http44:1.19.0'
  runtime 'com.google.flogger:flogger-system-backend:0.2'
}

vertx {
  mainVerticle = 'edu.cutie.lightbackend.MainVerticle'
}

compileKotlin {
  kotlinOptions {
    jvmTarget = '1.8'
  }
}

shadowJar {
  classifier = 'fat'
  manifest {
    attributes 'Main-Verticle': 'edu.cutie.lightbackend.MainVerticle'
  }
  mergeServiceFiles {
    include 'META-INF/services/io.vertx.core.spi.VerticleFactory'
  }
  archiveName = 'quang.jar'
}

task stage(dependsOn: ['shadowJar'])

kotlin {
  experimental {
    coroutines "enable"
  }
}
